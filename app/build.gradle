apply plugin: 'android'

//**CUSTOM TASKS**//


/**
 * Copies mapping from build output folder into own output folder.
 * Caution: This task asumes that folder outputs and proguard exists and mapping is in sub sub folder of proguard folder. If anything changes in gradle build configuration, this task has to be updated
 */
task copyMapping << {
    copy {
        from(new File(new File(buildDir.getPath(), "outputs"), "mapping").listFiles()[0].listFiles()[0]) {
            include '**/mapping.txt'
        }
        into new File(projectDir.parent, "outputs")
        includeEmptyDirs = false
    }
    println "Proguard mapping copied"
}

/**
 * Initialize copy of mapping.txt after progurad task is performed
 */
gradle.taskGraph.afterTask { Task task, TaskState state ->
    if (task.name.startsWith("proguard")) {
        copyMapping.execute()
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId project.mPackageName
        minSdkVersion 14
        targetSdkVersion 21
        versionCode Integer.parseInt(project.mBuild)
        versionName project.mVersionName
    }

    signingConfigs {
        release {
            keyAlias 'easy'
            storeFile file("../keystore/" + project.mKeyFile)
            storePassword 'easy848'
            keyPassword 'easy848'
        }

    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
        }
        //beta build that is sent to hockeyapp for testing purposes
        beta {
            applicationIdSuffix '.beta'
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'AndroidManifest.xml'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:22.2.0'

    compile 'net.hockeyapp.android:HockeySDK:3.0.2'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile('de.greenrobot:eventbus:2.2.0') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile('de.keyboardsurfer.android.widget:crouton:1.8.4@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0-RC2'
    compile 'com.squareup.okhttp:okhttp:2.0.0-RC2'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'de.greenrobot:greendao:1.3.7'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'com.commonsware.cwac:endless:1.2.3'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'com.melnykov:floatingactionbutton:1.2.0'

    compile project(":materialwidget")
    compile('com.afollestad.material-dialogs:core:0.8.5.2@aar') {
        transitive = true
    }
    compile 'me.grantland:autofittextview:0.2.1'

    testCompile 'junit:junit:4.12'


}
